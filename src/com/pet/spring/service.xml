<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 이 xml 은 서블릿이 보유한 빈컨텍스트가 아니라, 
	톰켓이 가동될때 생성된 SerlvetContext가 보유한 빈컨텍스트이다
	따라서, 모든 서블릿이 보유한 빈들이, 이 ServletContext 수준의
	빈들을 공용으로 접근할 수 있다..그럼 어디에 쓰이나?
	모든 컨트롤러가 공통으로사용하는 로직에 사용..주로  DB 연동 -->
	
	<!-- 스프링 jdbc 는 jndi를 접근할 수 있다  -->
	<jee:jndi-lookup jndi-name="jdbc/oracle"
		id="dataSource" 
		resource-ref="true"/>
	
	<!-- 스프링 jdbc를 사용하는 이유는 트랜잭션 등을 지원하기 때문이므로
	 지금 사용중인 퍼스스턴스 영역의 기술에 따라 알맞는 트랜잭션 매니져를 
	 등록해야 한다..
	 jdbc, mybatis,ibatis : DataSourceTransactionManager
	 hibernate : HibernateTransactionManager
	 -->		
	 <bean id="transactionManager" 
	 	class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	 	p:dataSource-ref="dataSource"/>
	 
	 <!-- mybatis  연동 -->
	 <bean id="sqlSessionFactoryBean" 
	 	class="org.mybatis.spring.SqlSessionFactoryBean"
	 	p:dataSource-ref="dataSource"
	 	p:configLocation="classpath:com/pet/mybatis/config.xml"/>
	 	
	<bean id="sqlSessionTemplate" 
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryBean"/>
	</bean>
	
	<!-- 데이터베이스 연동 관련 객체를 자동으로 등록하자 -->
	<context:component-scan base-package="com.pet.model">
	</context:component-scan>

 	<!-- 
 		aop기반의 트랜잭션 처리 
 		1) 데이터베이스 연동기술(oracle, mysql, mssql,db2)의 종류에 따라서 트랜잭션 처리가 틀리므로, 
 		    어떠한 트랜잭션 메니저를 사용할지부터 결정
 	-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert" 
				propagation="REQUIRED" 
				rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice> 	
 	
	<aop:config>
		<aop:pointcut expression="execution(public * com.pet.model.shopping..*Service.*(..))" 
			id="serviceMethod"/>		
		
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/>
	</aop:config> 	


</beans>






















